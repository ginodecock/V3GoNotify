{
  "name": "each-series",
  "version": "1.0.0",
  "description": "Asynchronously iterate an array as a series",
  "main": "index.js",
  "scripts": {
    "test": "node test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:sorribas/each-series.git"
  },
  "author": {
    "name": "Eduardo Sorribas"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/sorribas/each-series/issues"
  },
  "homepage": "https://github.com/sorribas/each-series",
  "devDependencies": {
    "tap": "~0.4.8"
  },
  "readme": "# each-series\n\nAsynchronously iterate an array as a series. Similar to  [async.eachSeries](https://github.com/caolan/async#eachseriesarr-iterator-callback), but as a small module.\n\n## Installation\n\nInstall through npm\n\n```\nnpm install each-series\n```\n\n## Example\n\n```js\nvar each = require('each-series');\n\neach([1,2,3,4,5,6,7], function(el, i, done) {\n\tsetTimeout(function() {\n\t\tconsole.log(el);\n\t\tdone();\n\t}, 100 - (el * 10));\n}, function(err) {\n\tconsole.log('Done!');\n});\n```\nThe module is only one function\n\n```\neach(array, iterator, [callback])\n```\n\nThe callback is optional.\n\n## Error handling\n\nIf an error is passed to the `done` function passed to the iterator, iteration will be stopped and the callback\nwill be invoked with the error.\n\n## License\n\nMIT License\n",
  "readmeFilename": "README.md",
  "_id": "each-series@1.0.0",
  "_from": "each-series@^1.0.0"
}
